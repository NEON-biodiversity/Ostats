% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/circular_overlap.R
\name{circular_overlap}
\alias{circular_overlap}
\title{Overlap of Two Circular Distributions}
\usage{
circular_overlap(
  a,
  b,
  circular_units = "radians",
  normal = TRUE,
  circular_args = list,
  density_args = list()
)
}
\arguments{
\item{a}{A vector of length whose length equals the number of individuals in a community, with a column containing one measurement of a certain trait.}

\item{b}{Another vector whose length equals the number of individuals in a community with the same trait measurements to be compared against a.}

\item{circular_units}{Units of the cicular measurement. Passed to \code{\link[circular]{circular}}.
Defaults to \code{"radians"}.}

\item{normal}{If set to TRUE, the area under all density functions is normalized to one.
If set to FALSE, the area under all density functions is proportional to the number of
observations in that group.}

\item{circular_args}{A list of additional arguments to be passed to
\code{\link[circular]{circular}}.}

\item{density_args}{A list of additional arguments to be passed to
\code{\link[circular]{density.circular}}.}
}
\value{
The function returns a vector of three values:
\item{overlap_average}{The average overlap of vectors a and b, calculated by the overlap
area *2 divided by the sum of areas under the two density functions.}
\item{overlap_a}{The proportion of vector a traits that overlap with vector b traits, calculated by the overlap
area divided by the area under the density function generated from a.}
\item{overlap_b}{The proportion of vector b traits that overlaps with vector a traits, calculated by the overlap
area divided by the area under the density function generated from b.}
}
\description{
This function converts input vectors of individual traits to circular objects and generates kernel
density estimates to calculate the area of overlap between the two trait distributions.
}
\details{
Circular conversion is carried out by using the function \code{\link[circular]{circular}}.
Kernel density estimates are then generated. Additional options for kernel density
estimation should be passed to \code{density_args}; otherwise, default values are used.
The intersection density function is then calculated by taking the integral of
the minimum of the two functions, from which the overlap outputs are calculated. The
user must specify the bandwidth for the kernel density estimates, as well as options
for the circular conversion.
}
\examples{
# circular overlap of two random uniform vectors of radian angles
# Create a vector x of length 100 (n=100) with rando values pulled from a uniform distribution with a lower limit of zero and an upper limit of pi*3/2.
x <- runif(n = 100, min = 0, max = pi*3/2)

# Create a vector y of length 100 (n=100) with rando values pulled from a uniform distribution with a lower limit of pi and an upper limit of 2*pi.
y <- runif(n = 100, min = pi, max = 2*pi)

# Calculate the circular overlap of vectors x and y using units of radians with a density bandwidth of one.
circular_overlap(x, y, circular_units = "radians", density_args = list(bw = 1))

}
\seealso{
\code{\link{pairwise_overlap}} To calculate linear overlap between two empirical
density estimates.

\code{\link{circular_overlap_24hour}} To calculate overlap for discrete hourly
data.
}
